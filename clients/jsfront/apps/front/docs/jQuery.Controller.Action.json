C({"name": "jQuery.Controller.Action", "children": [{"name": "jQuery.Controller.Action.static", "className": "static", "title": undefined, "hide": false}, {"name": "jQuery.Controller.Action.prototype", "className": "prototype", "title": undefined, "hide": false}, {"name": "jQuery.Controller.Action.prototype.init", "className": "function", "title": undefined, "hide": false}, {"name": "jQuery.Controller.Action.prototype.destroy", "className": "function", "title": undefined, "hide": false}], "author": undefined, "inherits": "jQuery.Class", "alias": undefined, "comment": "jQuery.Controller.Action is and abstract base class.\n Controller Action classes are used to match controller prototype functions. \n Inheriting classes must provide a static matches function.\n \n When a new controller is created, it iterates through its prototype functions and tests\n each action if it matches.  If there is a match, the controller creates a new action.\n \n The action is responsible to callback the function when appropriate.  It typically uses\n dispatch_closure to call functions appropriately.  \n \n", "className": "class", "tags": []})